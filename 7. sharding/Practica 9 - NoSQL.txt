1) En Windows se puede poner "resmon" en la consola y se puede buscar por el servicio mongos. En este caso es el puerto 20006
	En Linux se hará con ps -A ...


2) sh.status()

3) use infantil
   sh.enableSharding("infantil")
   sh.status()  

4) sh.shardCollection("infantil.tallas", {edad:1}, true)

5) 

sh.setBalancerState(true)
sh.enableAutoSplit()

sh.addShardTag("__unknown_name__-rs0","1-3")
sh.addShardTag("__unknown_name__-rs1","4-7")
sh.addShardTag("__unknown_name__-rs2","8-12")
// ahora añadimos los intervalos
sh.addTagRange("infantil.tallas", {edad:1},{edad:4}, "1-3")
sh.addTagRange("infantil.tallas", {edad:4},{edad:8}, "4-7")
sh.addTagRange("infantil.tallas", {edad:8},{edad:13}, "8-12")
use infantil
for (i=0; i<100000; i++) db.tallas.insert({_id:i, edad: i%13+1})

          
                infantil.tallas
                        shard key: { "edad" : 1 }
                        unique: true
                        balancing: true
                        chunks:
                                __unknown_name__-rs0    1
                                __unknown_name__-rs1    3
                                __unknown_name__-rs2    1
                        { "edad" : { "$minKey" : 1 } } -->> { "edad" : 1 } on : __unknown_name__-rs1 Timestamp(2, 1)
                        { "edad" : 1 } -->> { "edad" : 4 } on : __unknown_name__-rs0 Timestamp(2, 0)
                        { "edad" : 4 } -->> { "edad" : 8 } on : __unknown_name__-rs1 Timestamp(3, 1)
                        { "edad" : 8 } -->> { "edad" : 13 } on : __unknown_name__-rs2 Timestamp(3, 0)
                        { "edad" : 13 } -->> { "edad" : { "$maxKey" : 1 } } on : __unknown_name__-rs1 Timestamp(1, 5)
                         tag: 1-3  { "edad" : 1 } -->> { "edad" : 4 }
                         tag: 4-7  { "edad" : 4 } -->> { "edad" : 8 }
                         tag: 8-12  { "edad" : 8 } -->> { "edad" : 13 }


6) Hay 5 chunks, db.tallas.stats()

7) 3
8) 3